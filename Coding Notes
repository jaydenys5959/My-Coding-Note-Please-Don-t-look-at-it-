제 1편 *아 어렵다*
리스트 마지막 원소 가지고 오는 방법
톡톡 개념! len(a) 뜻 -> 어떤 리스트나 문자열의 길이를 알려주는 함수
A = [1,2,3,4]
print(A[len(A)-1])
톡톡 예시!
len(A) = 4
len(A) - 1 = 3
A[3] --> 마지막 원소의 인덱스
톡톡 1타 개념!
print(A[-1])

Today's date: 2024.1.21
제 2편 경우의 수
경우의 수
경우의 수는 숫자를 predict 하는 것이다.
숫자 카드의 5개중의 2개를 고르는 방법 같은 것.
동시의 일어나는 일은 곱셈을 통하여 빠르게 구할 수 있다.
오늘의 짱인 귀지: 2024/1/24
크림빵
2 3 2
2는 n 을 뜻 하고요. N는 크으리임빠앙의 무욲음 입니이다아.
3은 K 를 뜨윽.하고요. K는 크림빵의 한묶음의 빠ㅏㅇ 의 수 입니다.
2는 p를 뜨읏 하고요. P는 크림이 없는 빵이 p 보다 작아야한다이다.
일타 예시
p는 슈크림 붕어빵에 슈크림이 없는 것이다. 매우 주우우우우우우우웅요요요요요
1 1 0 팔 수 있다
1 0 0 팔 수 없다
1 0 0 은 크림이 없는 빵의 개수가 p보다 작지 않기 때문에 팔 수 없다. 
오늘의 강의 
.끝.
2024/1/28
경우의 수
1) 동시에 나타나는 경우의 수는 순서쌍으로 정리하여 구한다.
순서쌍 이란?
순서쌍은 (1,2) 같은 거다.
2) 순서대로 모든 경우의 수를 하나하나 세어서 나열하고 전체의 가짓수를 세어봄.
3) 나올 수 있는 모든 경우의 수형도 그림으로 나타낸후 그 가지의 수를 세어서 구한다.
오늘은 그리고 오늘은 동시에 일어나는 사건 브이 에스 따로 이러나는 사건을 배웠다.
그...그...그 두사건 A와B가 동시에 일어나는 경우의수=m*n이다!
2024.1.31
오늘은 atm 백준 문제에 대해 풀어보았다. 
일단은 ATM에서 제일 중요하느 것은 누!적!합!이당. 누적합은 예시>
1, (1+2) , (1+2+3) 등등... 
어쨌든 atm의 생명은 시간이기 때문에 백준 문제에서도 시간을 최소화 하는 것을 출력하였다
2024/3/3
파이썬에서 정렬 함수 사용한는 방법 2가지!
1) A.sort()
2) sorted(A)
2024.4.3 - 
코인 1개 -> 나뭇잎 1개
코인 2개로 돌 1개
코인 3개로 나뭇가지 1개

거래 1 필요한 코인의 개수:
돌 * 2 = 4
나뭇잎 = 1
총 5코인으로 은 1개를 만들 수 있다.
5코인으로 필요한 은 1개를 만들수있다
거래 2가 필요한 코인의 개수:
돌 =2
나뭇가지 *2 = 6
2+6 = 8
총 8개코인으로 2개
거래 3이 필요한 코인의 개수:
3개와 나뭇가지 2개 총 코인 -> 12코인
12*2 = 24, 24+5 = 28
코인 2개를 사용하여 돌을 하나 만들고
코인을 3개를 사용하여 나뭇가지를 만들면 철 2개다. 
그리고 그 방법을 3번하면 15코인이다. 
그리고 돌2개를 사용하면 돌에 4코인더사용하고 나뭇잎잎을 사용하여 나뭇잎을 1개 얻어 검을 만든다.
5 *1 = 5
3*1
14+5 = 19
2024/4/4
key point!
우선 str() 제일 중요한 것 -> 인트 에서 문자열로 익스체인지!
int -> str!
2번째 key point!
우선 print할때 , 랑 + 랑 매우 다름!
,는 띄어쓰기를  해주면서 글을 함께 출력하고 +는 출력이 붙어서 된다!
하지만 그중에서 +는 int -> str 이 되지 않으니 , 을 사용하 주는 것이 매우 좋다
***배수인지 아닌지 체끄 하는 빵법!
W = A % N 이렇게 있을 때 나머지를 사용하여 만약 나머지가 있으면 그숫자 (A ) 의 배수가 아닌것을 확인할 수 있다.
N = input() 
For I in range(0,len(N),10) : 
	print(N[I : I + 10]) 


1.  예제 입력과 출력이 가장 중요하다! 입력에서 숫자가 필요한 경우에만 int () 를 써준다. 
“Hello World!” “Hello,World!”와 같이 띄어쓰기나 구분자가 있는 경우에만 split이 유용하다

2. range() 에는 원래 3개의 값이 들어갈 수 있다. (Start, Stop, Step ) 
이 중 생략할 수 있는 값은 start 와 step이다. 
start를 생략하면, 0  / step을 생략하면, 1


3. 여러 문자를 가지고 올 때는 slicing을 이용한다. 
ex) a = “Hello World!” 
print(a[1:5]) —> ello 
2024/4/10
정보올림피아드 예습
3번 2021 년도
빨 주 노 초
-------------
주 빨 초 노
주 노 빨 초
주 초 빨 노
------------
노 빨 초 주
노 초 빨 주
노 초 주 빨
------------
초 빨 주 노
초 노 빨 주
초 노 주 빨
총 3(주가 앞인 수) + 3(노가 앞인수) + 3(초가 앞인수) = 9(총 여러가지 경우의 수)
더 쉽게 계산하는 법!
3*3 = 9
2024/4/11
코딩 분석coder
8번
720가지가 있는데 그중에 나누기 총 6개(a,b,c,d,e,f) = 120
또다른 풀이법: a 에 들어갈 수 있는 알파벳은 a를 재외하고 b,c,d,e,f 총 5개 그리고 b는 c,d,e,f 총 4개
그리고 c 는 d,e,f 총3개 d는 e,f 그리고 마지막 f는 1 다 곱하면 120이 된다.
그리고 앞자리가 c 가 될려면 곱하기 2번을 해야된다. 곱하기 2번 하면 240이 된다. 그리고 c,a,?,?,?는
c에 들어갈 수는 b,d,e,f 총 4개 그리고 3개 그리고 2개 그리고 1개. 총 곱하면 24.
그리고 240에다가 더하고 1을 더하면 265가 된다.
--------------------------------------------------------------------------------------------------------
브릿TV 라이브 스트리밍 복습 내용:
대단원 2개 배움
1. LIST
2. SORT
1번째, List는 [] 표시로 만들 수 있고 index 랑 슬라이스를 할 수 있다(index는 어느 위치에 있는지 확인 가능.
숫자를 이용해서 가져오는 것).
2번째, Sort는 Sorted 랑 X.Sort() 로 사용할 수 있다.
Sorted, Sort는 정렬한다는 뜻으로 숫자들을 다 정렬해준다.
nput() —> 입력 받는 코드
int() —> 숫자 형태의 “문자”를 “숫자”로 바꾸고 싶을 때 

# a = sorted( [3,2,4,2] ) 
# sorted —> 정렬된 리스트를 return 해주는 애 

# a.sort() 
—> 리스트 자체를 정렬하는 애, return 이 없음. 

D = --> None 

A = [ 1,2,5,3,4 ]
a.sort() 
print(a) 

# Mission! : 두 코드의 차이점과 공통점은? 

word =  input()
Word —> string 
 
Indexing —> index (리스트나 문자열에서 특정 값이 어디에 있는지를 알려주는 거, 위치) 

Slicing —> start, end index가 필요하다 . 

A[  start : end :  step(1) ]
A = "Hello” 
print(A[  :  : -1]

2024/11/15
그중에서도 c[I] 말이다. C안에 i 만큼 보인다.
C안에 I가 있다는 것은 C라는 리스트 안에 I 만큼 있다는 소리다.
c = int(input())
for i in range(c):
	C ...
스트링 활용법
X[Y]
x라는 리스트에 Y만큼 빼놓아서 읽는다.
"H" in "Hello"
"Hello" 안에 "H"가 있는지 체크하는 것임
2024/11/22
main topic = sorted and sort
sorted는 입력받은 것을 리턴해주는 거
sort는 바로바로 답장해주는거
main topic2 = x in y
예시 d in death o
번역(1) -> d가 death안에 있습니까?
예시(2) Hello in H x
번역(2) -> h안에 hello가 있습니까?
2025/4/4
 A[: 2] 무슨 뜻일까?
답: A에 만약 BABO JOON PLAY 가 있으면,
리스트 A 인덱스가 0인 문자 BABO가 죽고, 나머지가 살아남는 시스템이다.
LIST: M[A,B,C,D,E]
M[:3]-> ABC , M[1:4] -> A,B,C
2025/5/9
내가 몰랐던 개녕: [::-1] 노션 참고 바람. 다 적혀 있음.
[::-1] 은 -1 말 그대로 뒤에 것 부터 출력한다는 이야기다.
예를 하나 들어보겠다.
input: Freddy Fazbear Pizza Place
output: place pizza Fazbear Freddy
중요한건 String이나 리스트에 쓸 수 있다.
반대로 [::1] 로 하면 어떻게 될까?
INPUT: place pizza Fazbear Freddy
OUTPUT: Freddy Fazbear pizza place
라는걸로 된다.
